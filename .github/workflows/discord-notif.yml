name: Discord Notification

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, closed]
  create:
    branches:
      - '*'

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2
        
      - name: Send Discord Notification
        if: success()
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
          COMMIT_AUTHOR: ${{ github.event.head_commit.author.name }}
          COMMIT_HASH: ${{ github.sha }}
          COMMIT_TIMESTAMP: ${{ github.event.head_commit.timestamp }}
          PULL_REQUEST_TITLE: ${{ github.event.pull_request.title }}
          PULL_REQUEST_NUMBER: ${{ github.event.pull_request.number }}
          PULL_REQUEST_AUTHOR: ${{ github.event.pull_request.user.login }}
          PULL_REQUEST_ACTION: ${{ github.event.action }}
          PULL_REQUEST_SOURCE_BRANCH: ${{ github.event.pull_request.head.ref }}
          PULL_REQUEST_TARGET_BRANCH: ${{ github.event.pull_request.base.ref }}
          BRANCH_NAME: ${{ github.ref }}
          BRANCH_AUTHOR: ${{ github.actor }}
          CF_API_TOKEN: "${{ secrets.CF_API_TOKEN }}"
          ACCOUNT_IDENTIFIER: "${{ secrets.CF_ACCOUNT_ID }}"
          CF_EMAIL: "${{ secrets.CF_EMAIL_ID }}"
        run: |
          RESPONSE=$(curl "https://api.cloudflare.com/client/v4/accounts/${ACCOUNT_IDENTIFIER}/pages/projects" -H "Content-Type: application/json" -H "X-Auth-Key: ${CF_API_TOKEN}" -H "X-Auth-Email: ${CF_EMAIL}")
          
          AWARDTRAVEL_DATA=$(echo "$RESPONSE" | jq -r '.result[] | select(.name == "wegotocalstatela") | { name: .name, url: .latest_deployment.url }')
          
          if [[ -n "$AWARDTRAVEL_DATA" ]]; then
            # Set the "name" and "url" as environment variables
            CF_AWARDTRAVEL_NAME=$(echo "$AWARDTRAVEL_DATA" | jq -r '.name')
            CF_AWARDTRAVEL_URL=$(echo "$AWARDTRAVEL_DATA" | jq -r '.url')
          else
            CF_AWARDTRAVEL_NAME="Not found"
            CF_AWARDTRAVEL_URL="Not found"
          fi
          
          if [[ "${{ github.event_name }}" == "push" ]]; then
            DESCRIPTION="Action: Push\nBranch: $BRANCH_NAME\nCommit Message: $COMMIT_MESSAGE\nCommit Author: $COMMIT_AUTHOR\nCommit Hash: $COMMIT_HASH\nCommit Timestamp: $COMMIT_TIMESTAMP\nDeployment URL: $CF_AWARDTRAVEL_URL"
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            DESCRIPTION="Action: $PULL_REQUEST_ACTION\nPull Request $PULL_REQUEST_NUMBER - $PULL_REQUEST_TITLE\nPull Request Author: $PULL_REQUEST_AUTHOR\nSource Branch: $PULL_REQUEST_SOURCE_BRANCH\nTarget Branch: $PULL_REQUEST_TARGET_BRANCH\nPull Request URL: ${{ github.event.pull_request.html_url }}\nDeployment URL: $CF_AWARDTRAVEL_URL"
          elif [[ "${{ github.event_name }}" == "create" ]]; then
            DESCRIPTION="Action: New Branch Created\nBranch: $BRANCH_NAME\nBranch Author: $BRANCH_AUTHOR\nDeployment URL: $CF_AWARDTRAVEL_URL"
          else
            DESCRIPTION="Commit Message: $COMMIT_MESSAGE\nCommit Author: $COMMIT_AUTHOR\nCommit Hash: $COMMIT_HASH\nCommit Timestamp: $COMMIT_TIMESTAMP\nDeployment URL: $CF_AWARDTRAVEL_URL"
          fi

          curl -X POST -H "Content-Type: application/json" -d '{
            "embeds": [{
              "title": "Activity Information",
              "description": "'"$DESCRIPTION"'",
              "color": 16711680
            }]
          }' $DISCORD_WEBHOOK_URL
